"""Add login attempt tracking to User model

Revision ID: 359612bc3b0c
Revises: 8ed124af2831
Create Date: 2025-07-30 23:58:12.381795

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '359612bc3b0c'
down_revision: Union[str, None] = '8ed124af2831'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_flash_offers_id', table_name='flash_offers')
    op.drop_table('flash_offers')
    op.drop_index('ix_user_profile_images_id', table_name='user_profile_images')
    op.drop_index('ix_user_profile_images_user_id', table_name='user_profile_images')
    op.drop_table('user_profile_images')
    op.drop_table('user_streaks')
    op.drop_index('ix_missions_id', table_name='missions')
    op.drop_index('ix_missions_is_active', table_name='missions')
    op.drop_index('ix_missions_mission_type', table_name='missions')
    op.drop_table('missions')
    op.drop_index('ix_games_id', table_name='games')
    op.drop_table('games')
    op.drop_index('ix_avatars_category', table_name='avatars')
    op.drop_index('ix_avatars_id', table_name='avatars')
    op.drop_index('ix_avatars_required_rank', table_name='avatars')
    op.drop_table('avatars')
    op.drop_index('ix_user_mission_progress_id', table_name='user_mission_progress')
    op.drop_index('ix_user_mission_progress_mission_id', table_name='user_mission_progress')
    op.drop_index('ix_user_mission_progress_user_id', table_name='user_mission_progress')
    op.drop_table('user_mission_progress')
    op.drop_index('ix_game_logs_created_at', table_name='game_logs')
    op.drop_index('ix_game_logs_id', table_name='game_logs')
    op.drop_index('ix_game_logs_user_id', table_name='game_logs')
    op.drop_table('game_logs')
    op.drop_index('idx_user_sessions_expires_at', table_name='user_sessions')
    op.drop_index('idx_user_sessions_is_active', table_name='user_sessions')
    op.drop_index('idx_user_sessions_jti', table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_id', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index('ix_token_transfers_created_at', table_name='token_transfers')
    op.drop_index('ix_token_transfers_id', table_name='token_transfers')
    op.drop_table('token_transfers')
    op.drop_index('idx_blacklisted_tokens_expires_at', table_name='blacklisted_tokens')
    op.drop_index('idx_blacklisted_tokens_jti', table_name='blacklisted_tokens')
    op.drop_index('idx_blacklisted_tokens_user_id', table_name='blacklisted_tokens')
    op.drop_table('blacklisted_tokens')
    op.drop_index('idx_login_attempts_attempted_at', table_name='login_attempts')
    op.drop_index('idx_login_attempts_ip_address', table_name='login_attempts')
    op.drop_index('idx_login_attempts_user_id', table_name='login_attempts')
    op.drop_table('login_attempts')
    op.add_column('invite_codes', sa.Column('used_at', sa.DateTime(), nullable=True))
    op.add_column('invite_codes', sa.Column('expires_at', sa.DateTime(), nullable=True))
    op.add_column('invite_codes', sa.Column('max_uses', sa.Integer(), nullable=True))
    op.add_column('invite_codes', sa.Column('use_count', sa.Integer(), nullable=False))
    op.add_column('invite_codes', sa.Column('created_by_user_id', sa.Integer(), nullable=True))
    op.add_column('invite_codes', sa.Column('used_by_user_id', sa.Integer(), nullable=True))
    op.drop_index('ix_invite_codes_is_used', table_name='invite_codes')
    op.create_foreign_key(None, 'invite_codes', 'users', ['created_by_user_id'], ['id'])
    op.create_foreign_key(None, 'invite_codes', 'users', ['used_by_user_id'], ['id'])
    op.add_column('notifications', sa.Column('title', sa.String(length=200), nullable=True))
    op.add_column('notifications', sa.Column('is_read', sa.Boolean(), nullable=True))
    op.drop_index('ix_notifications_created_at', table_name='notifications')
    op.drop_index('ix_notifications_is_sent', table_name='notifications')
    op.drop_index('ix_notifications_user_id', table_name='notifications')
    op.alter_column('site_visits', 'source',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_index('ix_site_visits_user_id', table_name='site_visits')
    op.drop_index('ix_user_actions_action_type', table_name='user_actions')
    op.drop_index('ix_user_actions_timestamp', table_name='user_actions')
    op.drop_index('ix_user_actions_user_id', table_name='user_actions')
    op.add_column('user_rewards', sa.Column('amount', sa.Float(), nullable=True))
    op.add_column('user_rewards', sa.Column('description', sa.String(), nullable=True))
    op.add_column('user_rewards', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('user_rewards', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_rewards', 'reward_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('user_rewards', 'reward_value',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('user_rewards', 'source_description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_user_rewards_reward_type'), 'user_rewards', ['reward_type'], unique=False)
    op.drop_constraint(None, 'user_rewards', type_='foreignkey')
    op.drop_column('user_rewards', 'trigger_action_id')
    op.alter_column('users', 'rank',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('STANDARD', 'VIP', 'PREMIUM', 'ADMIN', name='userrankenum'),
               existing_nullable=False)
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'account_locked_until')
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'failed_login_attempts')
    op.add_column('vip_access_logs', sa.Column('access_type', sa.String(length=50), nullable=False))
    op.add_column('vip_access_logs', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.add_column('vip_access_logs', sa.Column('details', sa.String(length=255), nullable=True))
    op.drop_constraint(None, 'vip_access_logs', type_='foreignkey')
    op.drop_column('vip_access_logs', 'content_id')
    op.drop_column('vip_access_logs', 'access_tier')
    op.drop_column('vip_access_logs', 'accessed_at')
    op.drop_column('vip_access_logs', 'tokens_spent')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vip_access_logs', sa.Column('tokens_spent', sa.INTEGER(), nullable=True))
    op.add_column('vip_access_logs', sa.Column('accessed_at', sa.DATETIME(), nullable=True))
    op.add_column('vip_access_logs', sa.Column('access_tier', sa.VARCHAR(length=20), nullable=True))
    op.add_column('vip_access_logs', sa.Column('content_id', sa.INTEGER(), nullable=False))
    op.create_foreign_key(None, 'vip_access_logs', 'adult_content', ['content_id'], ['id'])
    op.drop_column('vip_access_logs', 'details')
    op.drop_column('vip_access_logs', 'timestamp')
    op.drop_column('vip_access_logs', 'access_type')
    op.add_column('users', sa.Column('failed_login_attempts', sa.INTEGER(), nullable=True))
    op.add_column('users', sa.Column('login_count', sa.INTEGER(), nullable=True))
    op.add_column('users', sa.Column('account_locked_until', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('last_login_at', sa.DATETIME(), nullable=True))
    op.alter_column('users', 'rank',
               existing_type=sa.Enum('STANDARD', 'VIP', 'PREMIUM', 'ADMIN', name='userrankenum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.add_column('user_rewards', sa.Column('trigger_action_id', sa.INTEGER(), nullable=True))
    op.create_foreign_key(None, 'user_rewards', 'user_actions', ['trigger_action_id'], ['id'])
    op.drop_index(op.f('ix_user_rewards_reward_type'), table_name='user_rewards')
    op.alter_column('user_rewards', 'source_description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('user_rewards', 'reward_value',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user_rewards', 'reward_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('user_rewards', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('user_rewards', 'created_at')
    op.drop_column('user_rewards', 'description')
    op.drop_column('user_rewards', 'amount')
    op.create_index('ix_user_actions_user_id', 'user_actions', ['user_id'], unique=False)
    op.create_index('ix_user_actions_timestamp', 'user_actions', ['timestamp'], unique=False)
    op.create_index('ix_user_actions_action_type', 'user_actions', ['action_type'], unique=False)
    op.create_index('ix_site_visits_user_id', 'site_visits', ['user_id'], unique=False)
    op.alter_column('site_visits', 'source',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.create_index('ix_notifications_user_id', 'notifications', ['user_id'], unique=False)
    op.create_index('ix_notifications_is_sent', 'notifications', ['is_sent'], unique=False)
    op.create_index('ix_notifications_created_at', 'notifications', ['created_at'], unique=False)
    op.drop_column('notifications', 'is_read')
    op.drop_column('notifications', 'title')
    op.drop_constraint(None, 'invite_codes', type_='foreignkey')
    op.drop_constraint(None, 'invite_codes', type_='foreignkey')
    op.create_index('ix_invite_codes_is_used', 'invite_codes', ['is_used'], unique=False)
    op.drop_column('invite_codes', 'used_by_user_id')
    op.drop_column('invite_codes', 'created_by_user_id')
    op.drop_column('invite_codes', 'use_count')
    op.drop_column('invite_codes', 'max_uses')
    op.drop_column('invite_codes', 'expires_at')
    op.drop_column('invite_codes', 'used_at')
    op.create_table('login_attempts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=False),
    sa.Column('attempted_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('success', sa.BOOLEAN(), nullable=False),
    sa.Column('failure_reason', sa.VARCHAR(length=100), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_login_attempts_user_id', 'login_attempts', ['user_id'], unique=False)
    op.create_index('idx_login_attempts_ip_address', 'login_attempts', ['ip_address'], unique=False)
    op.create_index('idx_login_attempts_attempted_at', 'login_attempts', ['attempted_at'], unique=False)
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('jti', sa.VARCHAR(length=255), nullable=False),
    sa.Column('token_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('blacklisted_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=100), nullable=True),
    sa.CheckConstraint("token_type IN ('access', 'refresh')", name='chk_blacklist_token_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('jti')
    )
    op.create_index('idx_blacklisted_tokens_user_id', 'blacklisted_tokens', ['user_id'], unique=False)
    op.create_index('idx_blacklisted_tokens_jti', 'blacklisted_tokens', ['jti'], unique=False)
    op.create_index('idx_blacklisted_tokens_expires_at', 'blacklisted_tokens', ['expires_at'], unique=False)
    op.create_table('token_transfers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('from_user_id', sa.INTEGER(), nullable=True),
    sa.Column('to_user_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_token_transfers_id', 'token_transfers', ['id'], unique=False)
    op.create_index('ix_token_transfers_created_at', 'token_transfers', ['created_at'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('jti', sa.VARCHAR(length=255), nullable=False),
    sa.Column('token_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('last_used_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('device_info', sqlite.JSON(), nullable=True),
    sa.CheckConstraint("token_type IN ('access', 'refresh')", name='chk_token_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('jti')
    )
    op.create_index('idx_user_sessions_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_index('idx_user_sessions_jti', 'user_sessions', ['jti'], unique=False)
    op.create_index('idx_user_sessions_is_active', 'user_sessions', ['is_active'], unique=False)
    op.create_index('idx_user_sessions_expires_at', 'user_sessions', ['expires_at'], unique=False)
    op.create_table('game_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('game_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('result', sa.VARCHAR(length=50), nullable=False),
    sa.Column('tokens_spent', sa.INTEGER(), nullable=True),
    sa.Column('reward_given', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_game_logs_user_id', 'game_logs', ['user_id'], unique=False)
    op.create_index('ix_game_logs_id', 'game_logs', ['id'], unique=False)
    op.create_index('ix_game_logs_created_at', 'game_logs', ['created_at'], unique=False)
    op.create_table('user_mission_progress',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('mission_id', sa.INTEGER(), nullable=False),
    sa.Column('current_progress', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_claimed', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('claimed_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_mission_progress_user_id', 'user_mission_progress', ['user_id'], unique=False)
    op.create_index('ix_user_mission_progress_mission_id', 'user_mission_progress', ['mission_id'], unique=False)
    op.create_index('ix_user_mission_progress_id', 'user_mission_progress', ['id'], unique=False)
    op.create_table('avatars',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('thumbnail_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), server_default=sa.text("'basic'"), nullable=False),
    sa.Column('unlock_condition', sa.TEXT(), nullable=True),
    sa.Column('required_rank', sa.VARCHAR(length=20), server_default=sa.text("'STANDARD'"), nullable=False),
    sa.Column('is_premium', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('sort_order', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_avatars_required_rank', 'avatars', ['required_rank'], unique=False)
    op.create_index('ix_avatars_id', 'avatars', ['id'], unique=False)
    op.create_index('ix_avatars_category', 'avatars', ['category'], unique=False)
    op.create_table('games',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('game_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('bet_amount', sa.INTEGER(), nullable=True),
    sa.Column('result', sa.VARCHAR(length=255), nullable=True),
    sa.Column('payout', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_games_id', 'games', ['id'], unique=False)
    op.create_table('missions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('mission_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('target_value', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('reward_type', sa.VARCHAR(length=50), server_default=sa.text("'cyber_token'"), nullable=False),
    sa.Column('reward_amount', sa.INTEGER(), server_default=sa.text("'10'"), nullable=False),
    sa.Column('reward_description', sa.VARCHAR(length=200), nullable=True),
    sa.Column('is_daily', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_weekly', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('priority', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_missions_mission_type', 'missions', ['mission_type'], unique=False)
    op.create_index('ix_missions_is_active', 'missions', ['is_active'], unique=False)
    op.create_index('ix_missions_id', 'missions', ['id'], unique=False)
    op.create_table('user_streaks',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('win_streak', sa.INTEGER(), nullable=True),
    sa.Column('loss_streak', sa.INTEGER(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_profile_images',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('avatar_id', sa.INTEGER(), nullable=True),
    sa.Column('custom_image_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('image_type', sa.VARCHAR(length=20), server_default=sa.text("'avatar'"), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['avatar_id'], ['avatars.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_profile_images_user_id', 'user_profile_images', ['user_id'], unique=False)
    op.create_index('ix_user_profile_images_id', 'user_profile_images', ['id'], unique=False)
    op.create_table('flash_offers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('content_id', sa.INTEGER(), nullable=False),
    sa.Column('original_price', sa.INTEGER(), nullable=False),
    sa.Column('discounted_price', sa.INTEGER(), nullable=False),
    sa.Column('discount_rate', sa.FLOAT(), nullable=False),
    sa.Column('trigger_reason', sa.VARCHAR(length=100), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('is_purchased', sa.BOOLEAN(), nullable=True),
    sa.Column('purchased_at', sa.DATETIME(), nullable=True),
    sa.Column('target_stage_name', sa.VARCHAR(length=50), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['adult_content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_flash_offers_id', 'flash_offers', ['id'], unique=False)
    # ### end Alembic commands ###
