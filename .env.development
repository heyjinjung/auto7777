
# Development Environment Configuration
# Casino-Club F2P Application - Docker Compose Environment
# 실제 운영 배포에는 사용하지 마세요.

# Application Environment
APP_ENV=development
NODE_ENV=development
DEBUG=true
ENVIRONMENT=development

# Database Configuration (PostgreSQL)
DB_HOST=postgres
DB_PORT=5432
DB_NAME=cc_webapp
DB_USER=cc_user
DB_PASSWORD=cc_password
DATABASE_URL=postgresql://cc_user:cc_password@postgres:5432/cc_webapp

# PostgreSQL Docker Configuration
POSTGRES_DB=cc_webapp
POSTGRES_USER=cc_user
POSTGRES_PASSWORD=cc_password

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_URL=redis://redis:6379/0

# Kafka Configuration
KAFKA_BOOTSTRAP_SERVERS=cc_kafka:9093
KAFKA_CLIENT_ID=casino-club-app

# Security Configuration
JWT_SECRET_KEY=casino-club-jwt-secret-key-development-2024
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=60
API_SECRET_KEY=casino-club-api-secret-key-development-2024

# Server Ports
BACKEND_PORT=8000
FRONTEND_PORT=3000

# Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000
NEXT_PUBLIC_APP_NAME=Casino-Club F2P
NEXT_PUBLIC_ENVIRONMENT=development

# Game Configuration
INITIAL_CYBER_TOKENS=200

# Corporate Site Integration
CORPORATE_SITE_URL=http://localhost:8080
CORPORATE_API_KEY=test-api-key-development

# CORS Configuration
ENABLE_CORS=true

# Documentation
ENABLE_DOCS=true

# Logging Configuration
LOG_LEVEL=DEBUG

# 포트
BACKEND_PORT=8000
FRONTEND_PORT=3000
ADMINER_PORT=8080

# CORS/URL
FRONTEND_URL=http://localhost:3000

# cc-webapp/.env.dev → .env.development로 통합 권장

