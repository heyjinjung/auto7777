version: '3.8'

services:
  frontend:
    build:
      context: ./cc-webapp/frontend
      dockerfile: Dockerfile
    volumes:
      - ./cc-webapp/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: npm run dev

  backend:
    build:
      context: ./cc-webapp/backend
      dockerfile: Dockerfile
    volumes:
      - ./cc-webapp/backend:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHON_ENV=development
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: cc_user
      POSTGRES_PASSWORD: cc_password
      POSTGRES_DB: cc_webapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ZOOKEEPER: zookeeper:2181

  zookeeper:
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"

volumes:
  postgres_data: